{
"scope": "source.js -string -comment -constant",

"completions":
[
        { "trigger": "while", "contents": "while (${1:condition}${1/(t$)|(f$)|.*/?1:rue:?2:alse/}) {\n\t$0\n}" },
        { "trigger": "forin", "contents": "for (var ${1:index} in ${2:array}) {\n\tif (${2:array}.hasOwnProperty(${1:index})) {\n\t\t$0\n\t}\n}" },
        { "trigger": "cl", "contents": "console.log($0);" },
        { "trigger": "ce", "contents": "console.error(${1:err});$0" },
        { "trigger": "f", "contents": "function (${1:arg}) {\n\t$0\n}" },
        { "trigger": "fc", "contents": "function (${1:arg}) {\n\t$0\n};" },
        { "trigger": "fcc", "contents": "(function (${1:arg}) {\n\t$0\n}(${1}));" },
        { "trigger": "if", "contents": "if (${1:arg}) {\n\t$0\n}" },
        { "trigger": "ife", "contents": "if (${1:arg}) {\n\t$0\n} else {\n\t\n}" },
        { "trigger": "ei", "contents": "else if (${1:arg}) {\n\t$0\n}" },
        { "trigger": "else", "contents": "else {\n\t$0\n}" },
        { "trigger": "switch", "contents": "switch (${1:condition}) {\ncase ${2:value}:\n\t$0\n\tbreak;\n}" },
        { "trigger": "case", "contents": "case ${2:case}:\n\t$0\n\tbreak;" },
        { "trigger": "strict", "contents": "'use strict';\n$0" },
        { "trigger": "map", "contents": "map(function (${1:element}) {\n\t$0\n})" },
        { "trigger": "reduce", "contents": "reduce(function (${2:old}, ${3:new}) {\n\t$0\n}, ${1:initValue})" },
        { "trigger": "forEach", "contents": "forEach(function (${1:element}, ${2:index}) {\n\t$0\n})" },
        { "trigger": "getset", "contents": "set ${1:property}(${1:property}) {\n\tthis._${1:property} = ${1:property};\n}\n\nget ${1:property}() {\n\treturn this._${1:property};\n}" }
]
}
